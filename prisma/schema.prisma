generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model api_tokens {
  id         Int      @id @default(autoincrement())
  api_type   String   @unique(map: "api_type")
  secret     String
  expiration String
  created_at DateTime @default(now()) @db.DateTime(0)
  updated_at DateTime @default(now()) @db.DateTime(0)

  @@index([api_type], map: "idx_api_type")
  @@index([created_at], map: "idx_created_at")
  @@index([expiration], map: "idx_expiration")
  @@index([secret], map: "idx_secret")
  @@index([updated_at], map: "idx_updated_at")
}

model api_types {
  id         Int      @id @default(autoincrement())
  api_type   String   @unique(map: "api_type")
  created_at DateTime @default(now()) @db.DateTime(0)
  updated_at DateTime @default(now()) @db.DateTime(0)

  @@index([api_type], map: "idx_api_type")
  @@index([created_at], map: "idx_created_at")
  @@index([updated_at], map: "idx_updated_at")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model apis {
  id                                                Int                      @id @default(autoincrement())
  title                                             String
  subtitle                                          String?
  application_type                                  String
  service_type                                      String
  data_type                                         String
  label_map                                         Json?
  bulletin_grouping_type                            String?
  bulletin_formatting_content_selection_filter_list Json?
  bulletin_formatting_content_separator_list        Json?
  bulletin_formatting_label_list                    Json?
  method_type                                       String
  authentication_endpoint                           String?
  data_endpoint                                     String
  username                                          String
  password                                          String
  body                                              Json?
  is_bulletin_formatting_key_value_label            Boolean?
  is_api_active                                     Boolean                  @default(true)
  created_at                                        DateTime                 @default(now()) @db.DateTime(0)
  updated_at                                        DateTime                 @default(now()) @db.DateTime(0)
  application_types                                 application_types        @relation(fields: [application_type], references: [application_type], onDelete: Cascade, onUpdate: NoAction, map: "apis_ibfk_1")
  service_types                                     service_types            @relation(fields: [service_type], references: [service_type], onDelete: Cascade, onUpdate: NoAction, map: "apis_ibfk_2")
  data_types                                        data_types               @relation(fields: [data_type], references: [data_type], onDelete: Cascade, onUpdate: NoAction, map: "apis_ibfk_3")
  bulletin_grouping_types                           bulletin_grouping_types? @relation(fields: [bulletin_grouping_type], references: [bulletin_grouping_type], onDelete: Cascade, onUpdate: NoAction, map: "apis_ibfk_4")
  method_types                                      method_types             @relation(fields: [method_type], references: [method_type], onDelete: Cascade, onUpdate: NoAction, map: "apis_ibfk_5")

  @@index([application_type], map: "idx_application_type")
  @@index([authentication_endpoint], map: "idx_authentication_endpoint")
  @@index([bulletin_grouping_type], map: "idx_bulletin_grouping_type")
  @@index([created_at], map: "idx_created_at")
  @@index([data_endpoint], map: "idx_data_endpoint")
  @@index([data_type], map: "idx_data_type")
  @@index([is_api_active], map: "idx_is_api_active")
  @@index([is_bulletin_formatting_key_value_label], map: "idx_is_bulletin_formatting_key_value_label")
  @@index([method_type], map: "idx_method_type")
  @@index([password], map: "idx_password")
  @@index([service_type], map: "idx_service_type")
  @@index([subtitle], map: "idx_subtitle")
  @@index([title], map: "idx_title")
  @@index([updated_at], map: "idx_updated_at")
  @@index([username], map: "idx_username")
}

model application_types {
  id               Int       @id @default(autoincrement())
  application_type String    @unique(map: "application_type")
  created_at       DateTime  @default(now()) @db.DateTime(0)
  updated_at       DateTime  @default(now()) @db.DateTime(0)
  apis             apis[]
  queries          queries[]
  users            users[]

  @@index([application_type], map: "idx_application_type")
  @@index([created_at], map: "idx_created_at")
  @@index([updated_at], map: "idx_updated_at")
}

model bulletin_grouping_types {
  id                     Int       @id @default(autoincrement())
  bulletin_grouping_type String    @unique(map: "bulletin_grouping_type")
  created_at             DateTime  @default(now()) @db.DateTime(0)
  updated_at             DateTime  @default(now()) @db.DateTime(0)
  apis                   apis[]
  queries                queries[]

  @@index([bulletin_grouping_type], map: "idx_bulletin_grouping_type")
  @@index([created_at], map: "idx_created_at")
  @@index([updated_at], map: "idx_updated_at")
}

model data_types {
  id         Int       @id @default(autoincrement())
  data_type  String    @unique(map: "data_type")
  created_at DateTime  @default(now()) @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.DateTime(0)
  apis       apis[]
  queries    queries[]

  @@index([created_at], map: "idx_created_at")
  @@index([data_type], map: "idx_data_type")
  @@index([updated_at], map: "idx_updated_at")
}

model database_types {
  id            Int       @id @default(autoincrement())
  database_type String    @unique(map: "database_type")
  created_at    DateTime  @default(now()) @db.DateTime(0)
  updated_at    DateTime  @default(now()) @db.DateTime(0)
  queries       queries[]

  @@index([created_at], map: "idx_created_at")
  @@index([database_type], map: "idx_database_type")
  @@index([updated_at], map: "idx_updated_at")
}

model method_types {
  id          Int      @id @default(autoincrement())
  method_type String   @unique(map: "method_type")
  created_at  DateTime @default(now()) @db.DateTime(0)
  updated_at  DateTime @default(now()) @db.DateTime(0)
  apis        apis[]

  @@index([created_at], map: "idx_created_at")
  @@index([method_type], map: "idx_method_type")
  @@index([updated_at], map: "idx_updated_at")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model queries {
  id                                                Int                      @id @default(autoincrement())
  title                                             String
  subtitle                                          String?
  application_type                                  String
  service_type                                      String
  data_type                                         String
  label_map                                         Json?
  bulletin_grouping_type                            String?
  bulletin_formatting_content_selection_filter_list Json?
  bulletin_formatting_content_separator_list        Json?
  bulletin_formatting_label_list                    Json?
  database_type                                     String
  sql                                               String                   @db.LongText
  is_bulletin_formatting_key_value_label            Boolean?
  is_query_periodic                                 Boolean                  @default(false)
  is_query_active                                   Boolean                  @default(true)
  created_at                                        DateTime                 @default(now()) @db.DateTime(0)
  updated_at                                        DateTime                 @default(now()) @db.DateTime(0)
  application_types                                 application_types        @relation(fields: [application_type], references: [application_type], onDelete: Cascade, onUpdate: NoAction, map: "queries_ibfk_1")
  service_types                                     service_types            @relation(fields: [service_type], references: [service_type], onDelete: Cascade, onUpdate: NoAction, map: "queries_ibfk_2")
  data_types                                        data_types               @relation(fields: [data_type], references: [data_type], onDelete: Cascade, onUpdate: NoAction, map: "queries_ibfk_3")
  bulletin_grouping_types                           bulletin_grouping_types? @relation(fields: [bulletin_grouping_type], references: [bulletin_grouping_type], onDelete: Cascade, onUpdate: NoAction, map: "queries_ibfk_4")
  database_types                                    database_types           @relation(fields: [database_type], references: [database_type], onDelete: Cascade, onUpdate: NoAction, map: "queries_ibfk_5")

  @@index([application_type], map: "idx_application_type")
  @@index([bulletin_grouping_type], map: "idx_bulletin_grouping_type")
  @@index([created_at], map: "idx_created_at")
  @@index([data_type], map: "idx_data_type")
  @@index([database_type], map: "idx_database_type")
  @@index([is_bulletin_formatting_key_value_label], map: "idx_is_bulletin_formatting_key_value_label")
  @@index([is_query_active], map: "idx_is_query_active")
  @@index([is_query_periodic], map: "idx_is_query_periodic")
  @@index([service_type], map: "idx_service_type")
  @@index([subtitle], map: "idx_subtitle")
  @@index([title], map: "idx_title")
  @@index([updated_at], map: "idx_updated_at")
}

model sankhya_database_configuration {
  id                  Int      @id @default(autoincrement())
  instant_client_path String
  username            String
  password            String
  connect_string      String
  created_at          DateTime @default(now()) @db.DateTime(0)
  updated_at          DateTime @default(now()) @db.DateTime(0)

  @@index([connect_string], map: "idx_connect_string")
  @@index([created_at], map: "idx_created_at")
  @@index([instant_client_path], map: "idx_instant_client_path")
  @@index([password], map: "idx_password")
  @@index([updated_at], map: "idx_updated_at")
  @@index([username], map: "idx_username")
}

model segware_configuration {
  id                      Int      @id @default(autoincrement())
  auth_endpoint           String
  events_endpoint         String
  service_orders_endpoint String
  system_status_endpoint  String
  username                String
  password                String
  token                   String   @db.LongText
  created_at              DateTime @default(now()) @db.DateTime(0)
  updated_at              DateTime @default(now()) @db.DateTime(0)

  @@index([auth_endpoint], map: "idx_auth_endpoint")
  @@index([created_at], map: "idx_created_at")
  @@index([events_endpoint], map: "idx_events_endpoint")
  @@index([password], map: "idx_password")
  @@index([service_orders_endpoint], map: "idx_service_orders_endpoint")
  @@index([system_status_endpoint], map: "idx_system_status_endpoint")
  @@index([updated_at], map: "idx_updated_at")
  @@index([username], map: "idx_username")
}

model service_types {
  id           Int       @id @default(autoincrement())
  service_type String    @unique(map: "service_type")
  created_at   DateTime  @default(now()) @db.DateTime(0)
  updated_at   DateTime  @default(now()) @db.DateTime(0)
  apis         apis[]
  queries      queries[]

  @@index([created_at], map: "idx_created_at")
  @@index([service_type], map: "idx_service_type")
  @@index([updated_at], map: "idx_updated_at")
}

model sigma_desktop_database_configuration {
  id         Int      @id @default(autoincrement())
  host       String
  database   String
  username   String
  password   String
  created_at DateTime @default(now()) @db.DateTime(0)
  updated_at DateTime @default(now()) @db.DateTime(0)

  @@index([created_at], map: "idx_created_at")
  @@index([database], map: "idx_database")
  @@index([host], map: "idx_host")
  @@index([password], map: "idx_password")
  @@index([updated_at], map: "idx_updated_at")
  @@index([username], map: "idx_username")
}

model three_mod_database_configuration {
  id         Int      @id @default(autoincrement())
  host       String
  database   String
  username   String
  password   String
  created_at DateTime @default(now()) @db.DateTime(0)
  updated_at DateTime @default(now()) @db.DateTime(0)

  @@index([created_at], map: "idx_created_at")
  @@index([database], map: "idx_database")
  @@index([host], map: "idx_host")
  @@index([password], map: "idx_password")
  @@index([updated_at], map: "idx_updated_at")
  @@index([username], map: "idx_username")
}

model users {
  id                Int               @id @default(autoincrement())
  application_type  String
  username          String
  password          String
  role_list         Json
  is_user_active    Boolean           @default(true)
  created_at        DateTime          @default(now()) @db.DateTime(0)
  updated_at        DateTime          @default(now()) @db.DateTime(0)
  application_types application_types @relation(fields: [application_type], references: [application_type], onDelete: Cascade, onUpdate: NoAction, map: "users_ibfk_1")

  @@unique([application_type, username], map: "unique_application_type_username")
  @@index([application_type], map: "idx_application_type")
  @@index([created_at], map: "idx_created_at")
  @@index([is_user_active], map: "idx_is_user_active")
  @@index([password], map: "idx_password")
  @@index([updated_at], map: "idx_updated_at")
  @@index([username], map: "idx_username")
}
